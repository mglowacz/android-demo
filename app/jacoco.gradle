apply plugin: 'jacoco'

ext {
    coverageSourceDirs = 'src/test/java'
}

jacoco {
    toolVersion = "0.8.2"
}
task jacocoTestReport(type:JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"
    classDirectories = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: [
                    '**/R.class',
                       '**/R$*.class',
                       '**/*$ViewBinder*.*',
                       '**/*$InjectAdapter*.*',
                       '**/*Injector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/*Test*.*',
                       '**/*Activity*.*',
                       'android/**/*.*'
            ]
    )
    additionalClassDirs = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: [
                    '**/R.class',
                    '**/R$*.class',
                    '**/*$ViewBinder*.*',
                    '**/*$InjectAdapter*.*',
                    '**/*Injector*.*',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*Test*.*',
                    '**/*Activity*.*',
                    'android/**/*.*'
            ]
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/testDebugUnitTest.exec")
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
    }
}
